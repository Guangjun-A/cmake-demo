cmake_minimum_required(VERSION 2.8)

project(DEMO4)

set()


# # CMake 最低版本号要求
# cmake_minimum_required (VERSION 2.8)

# # 项目信息
# project (Demo4)

# 设置系统变量CMAKE_INCLUDE_CURRENT_DIR为on就是自动添加
# set(CMAKE_INCLUDE_CURRENT_DIR ON)

# # 是否使用自己的 MathFunctions 库
# option (USE_MYMATH "Use provided math implementation" ON) # 赋值语句，开关作用(f赋值给USE_MYMATH)

# # 加入一个配置头文件，用于处理 CMake 对源码的设置
# # configure_file 命令用于加入一个配置头文件 config.h ，这个文件由 CMake 从 config.h.in 生成，通过这样的机制，将可以通过预定义一些参数和变量来控制代码的生成。
# configure_file (
#   "${PROJECT_SOURCE_DIR}/config.h.in" #　PROJECT_SOURCE_DIR指工程顶层目录
#   "${PROJECT_BINARY_DIR}/config.h"
#   )

# # 是否加入 MathFunctions 库
# if (USE_MYMATH)
#   include_directories ("${PROJECT_SOURCE_DIR}/math") # 创建临时目录索引，这样在main里就可以写#include<MathFunctions.h>而不是#include<math/MathFunctions.h>
#   add_subdirectory (math)
#   set (EXTRA_LIBS ${EXTRA_LIBS} MathFunctions)
# endif (USE_MYMATH)

# # 查找当前目录下的所有源文件
# # 并将名称保存到 DIR_SRCS 变量
# aux_source_directory(. DIR_SRCS)

# # 指定生成目标
# add_executable (Demo ${DIR_SRCS})
# target_link_libraries (Demo  ${EXTRA_LIBS})
